"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[827],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=u(t),d=a,k=f["".concat(c,".").concat(d)]||f[d]||p[d]||l;return t?r.createElement(k,o(o({ref:n},s),{},{components:t})):r.createElement(k,o({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2175:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return f}});var r=t(7462),a=t(3366),l=(t(7294),t(3905)),o=["components"],i={sidebar_position:2},c="Usage",u={unversionedId:"usage",id:"usage",title:"Usage",description:"Begin by requiring the module.",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/leaky-bucket/docs/usage",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/leaky-bucket/docs/installation"},next:{title:"Configuration",permalink:"/leaky-bucket/docs/configuration"}},s=[{value:"Filling the bucket",id:"filling-the-bucket",children:[],level:2},{value:"Detecting overflows",id:"detecting-overflows",children:[],level:2}],p={toc:s};function f(e){var n=e.components,t=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"usage"},"Usage"),(0,l.kt)("p",null,"Begin by requiring the module."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal LeakyBucket = require(ReplicatedStorage.Packages.LeakyBucket)\n')),(0,l.kt)("p",null,"To create a new leaky bucket, use the constructor:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local leakyBucket = LeakyBucket.new()\n")),(0,l.kt)("p",null,"Pass through an optional config dictionary to change any settings:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local config = {\n    leakRate = 2;\n    size = 5;\n}\n\nlocal leakyBucket = LeakyBucket.new(config)\n")),(0,l.kt)("p",null,"If a configuration is missing from the provided dictionary, the default will be used instead."),(0,l.kt)("h2",{id:"filling-the-bucket"},"Filling the bucket"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"fill")," function is used to fill the bucket and check if the bucket is overflowing."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local isOverflowing = leakyBucket:fill()\n\nif isOverflowing then\n    -- kick player\nelse\n    -- proceed as normal\nend\n")),(0,l.kt)("h2",{id:"detecting-overflows"},"Detecting overflows"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"overflowed")," event fires when the ",(0,l.kt)("inlineCode",{parentName:"p"},"fill")," function is called while the bucket is full."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local config = {\n    size = 1;\n    leakRate = 1;\n}\n\nlocal function onOverflowed()\n    -- kick player\nend\n\nlocal leakyBucket = LeakyBucket.new(config)\n\nleakyBucket.overflowed:connect(onOverflowed)\n")))}f.isMDXComponent=!0}}]);