"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{3905:function(e,n,t){t.d(n,{Zo:function(){return f},kt:function(){return s}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),u=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},f=function(e){var n=u(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),k=u(t),s=r,d=k["".concat(c,".").concat(s)]||k[s]||p[s]||l;return t?a.createElement(d,i(i({ref:n},f),{},{components:t})):a.createElement(d,i({ref:n},f))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=k;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},9733:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return f},default:function(){return k}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),i=["components"],o={sidebar_position:3},c="Configuration",u={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"The constructor function receives an optional configuration dictionary. This dictionary can contain any amount of settings.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/leaky-bucket/docs/configuration",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/leaky-bucket/docs/usage"},next:{title:"API Reference",permalink:"/leaky-bucket/docs/api-reference"}},f=[{value:"fillWhenOverflowing",id:"fillwhenoverflowing",children:[{value:"Always Fill",id:"always-fill",children:[],level:3},{value:"Don&#39;t Fill When Overflowing",id:"dont-fill-when-overflowing",children:[],level:3}],level:2},{value:"leakRate",id:"leakrate",children:[],level:2},{value:"size",id:"size",children:[],level:2}],p={toc:f};function k(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"The constructor function receives an optional configuration dictionary. This dictionary can contain any amount of settings."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#fillWhenOverflowing"},(0,l.kt)("inlineCode",{parentName:"a"},"fillWhenOverflowing"))),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"When true, calling ",(0,l.kt)("inlineCode",{parentName:"td"},"fill")," while the bucket is overflowing will still increase the bucket balance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#leakRate"},(0,l.kt)("inlineCode",{parentName:"a"},"leakRate"))),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"How frequently the bucket balance will decrease")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#size"},(0,l.kt)("inlineCode",{parentName:"a"},"size"))),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"How high the bucket balance can get before it overflows")))),(0,l.kt)("h2",{id:"fillwhenoverflowing"},"fillWhenOverflowing"),(0,l.kt)("p",null,"When true, calling ",(0,l.kt)("inlineCode",{parentName:"p"},"fill")," while the bucket is overflowing will still increase the bucket balance. Otherwise, the bucket balance will never increase beyond the bucket size."),(0,l.kt)("h3",{id:"always-fill"},"Always Fill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local leakyBucket = LeakyBucket.new()\n\nlocal overflowing\nfor i = 1, 5 do\n    overflowing = leakyBucket:fill()\nend\n\nprint(overflowing) -- true\nprint(leakyBucket:getBalance()) -- 5\n")),(0,l.kt)("h3",{id:"dont-fill-when-overflowing"},"Don't Fill When Overflowing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local config = {\n    fillWhenOverflowing = false;\n}\n\nlocal leakyBucket = LeakyBucket.new(config)\n\nlocal overflowing\nfor i = 1, 5 do\n    overflowing = leakyBucket:fill()\nend\n\nprint(overflowing) -- true\nprint(leakyBucket:getBalance()) -- 3\n")),(0,l.kt)("h2",{id:"leakrate"},"leakRate"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"leakRate")," is how frequently the bucket balance decreases in seconds."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local fastConfig = {\n    leakRate = 0.1;\n}\n\nlocal slowConfig = {\n    leakRate = 1;\n}\n\nlocal bucket1 = LeakyBucket.new(fastConfig)\nlocal bucket2 = LeakyBucket.new(slowConfig)\n\nfor i = 1, 10 do\n    bucket1:fill()\n    bucket2:fill()\nend\n\ntask.wait(1)\n\nprint(bucket1:getBalance()) -- 0\nprint(bucket2:getBalance()) -- 9\n")),(0,l.kt)("h2",{id:"size"},"size"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"size")," is how high the bucket balance can get before it begins overflowing."))}k.isMDXComponent=!0}}]);